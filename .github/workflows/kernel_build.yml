name: Build Gaming Kernel with KSU + SusfOS

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: üöÄ Checkout Kernel Source
      uses: actions/checkout@v4
      with:
        repository: Dark-Matter7232/CosmicFresh-Hanoip
        ref: main
        path: kernel

    - name: üì¶ Checkout AnyKernel3
      uses: actions/checkout@v4
      with:
        repository: osm0sis/AnyKernel3
        path: anykernel

    - name: üõ†Ô∏è Install Dependencies
      run: |
        sudo apt update
        sudo apt install -y bc bison flex libssl-dev libelf-dev build-essential ccache wget python3 zlib1g-dev

    - name: ‚öôÔ∏è Clone Proton Clang
      run: |
        git clone --depth=1 https://github.com/kdrag0n/proton-clang clang

    - name: ‚öôÔ∏è Clone LineageOS GCC Toolchains
      run: |
        git clone --depth=1 https://github.com/LineageOS/android_prebuilts_gcc_linux-x86_aarch64_aarch64-linux-android-4.9 gcc64
        git clone --depth=1 https://github.com/LineageOS/android_prebuilts_gcc_linux-x86_arm_arm-linux-androideabi-4.9 gcc32

    - name: üîß Apply KernelSU Patch
      run: |
        git clone https://github.com/tiann/KernelSU
        cd KernelSU
        bash install.sh ../kernel

    - name: üîß Apply SusfOS Patch
      run: |
        git clone https://github.com/SuS-Fusion/susfos-patches
        cd susfos-patches
        bash apply.sh ../kernel

    - name: ‚öôÔ∏è Set Environment Variables
      run: |
        echo "PATH=$PWD/clang/bin:$PWD/gcc64/bin:$PWD/gcc32/bin:$PATH" >> $GITHUB_ENV
        echo "ARCH=arm64" >> $GITHUB_ENV
        echo "SUBARCH=arm64" >> $GITHUB_ENV
        echo "CROSS_COMPILE=aarch64-linux-android-" >> $GITHUB_ENV
        echo "CROSS_COMPILE_ARM32=arm-linux-androideabi-" >> $GITHUB_ENV
        echo "CC=clang" >> $GITHUB_ENV

    - name: üíª Build Kernel
      run: |
        cd kernel
        make O=out hanoip_defconfig
        make -j$(nproc --all) O=out \
          CC=clang \
          CROSS_COMPILE=aarch64-linux-android- \
          CROSS_COMPILE_ARM32=arm-linux-androideabi-

    - name: üì¶ Package with AnyKernel3
      run: |
        cp kernel/out/arch/arm64/boot/Image.gz-dtb anykernel/zImage
        cd anykernel
        zip -r9 GamingKernel-KSU-SusfOS.zip * -x "*.git*"

    - name: ‚¨ÜÔ∏è Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: GamingKernel-KSU-SusfOS
        path: anykernel/GamingKernel-KSU-SusfOS.zip
