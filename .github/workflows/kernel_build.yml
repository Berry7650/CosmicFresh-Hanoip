name: Custom Kernel Build

on:
  workflow_dispatch:
    inputs:
      # These inputs are pre-filled for the CosmicFresh-Hanoip kernel but can be changed manually.
      kernel_repo:
        description: 'Kernel source repository'
        required: true
        default: 'https://github.com/Dark-Matter7232/CosmicFresh-Hanoip'
      kernel_branch:
        description: 'Kernel source branch'
        required: true
        default: 'main'
      defconfig_name:
        description: 'Kernel defconfig name'
        required: true
        default: 'hanoip_defconfig'
      toolchain_repo:
        description: 'Toolchain repository'
        required: true
        default: 'https://github.com/AOSiP-Devices/clang-toolchains'
      toolchain_branch:
        description: 'Toolchain branch'
        required: true
        default: 'main'

jobs:
  build_kernel:
    runs-on: ubuntu-latest
    
    steps:
      - name: 🚀 Checkout Kernel Source
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.inputs.kernel_repo }}
          ref: ${{ github.event.inputs.kernel_branch }}
          path: kernel_source

      - name: 📦 Checkout AnyKernel3
        uses: actions/checkout@v4
        with:
          repository: 'https://github.com/osm0sis/AnyKernel3'
          path: anykernel3

      - name: 🛠️ Setup Build Environment
        run: |
          sudo apt-get update
          sudo apt-get install -y git build-essential flex bison libssl-dev libelf-dev ccache bc libz-dev wget

      - name: ⚙️ Clone Toolchain
        run: |
          git clone --depth=1 --single-branch -b ${{ github.event.inputs.toolchain_branch }} ${{ github.event.inputs.toolchain_repo }} toolchain

      - name: ⚙️ Set up Environment Variables
        run: |
          echo "PATH=$(pwd)/toolchain/bin:$PATH" >> $GITHUB_ENV
          echo "ARCH=arm64" >> $GITHUB_ENV
          echo "SUBARCH=arm64" >> $GITHUB_ENV
          echo "CROSS_COMPILE=aarch64-linux-gnu-" >> $GITHUB_ENV
          echo "CROSS_COMPILE_COMPAT=arm-linux-gnueabi-" >> $GITHUB_ENV
          echo "CC=clang" >> $GITHUB_ENV
          echo "CLANG_TRIPLE=aarch64-linux-gnu-" >> $GITHUB_ENV
          
      - name: 💻 Build Kernel
        id: build_step
        run: |
          cd kernel_source
          make O=out ${{ github.event.inputs.defconfig_name }}
          make O=out -j$(nproc --all)

      - name: 📦 Package with AnyKernel3
        run: |
          cd anykernel3
          # Copy the compiled kernel to the AnyKernel3 directory
          cp ../kernel_source/out/arch/arm64/boot/Image.gz-dtb .
          
          # Create the flashable zip
          zip -r9 ${{ github.event.repository.name }}_${{ github.sha }}.zip . -x .git
          
      - name: ⬆️ Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: custom-kernel
          path: anykernel3/*.zip
